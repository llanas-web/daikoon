name: daikoon

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main
  pull_request:
    paths:
      - "lib/**"
      - "test/**"
      - "packages/**"
      - "pubspec.yaml"
      - ".github/workflows/daikoon.yaml"
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        channel: [stable]

    steps:
      - uses: actions/checkout@v5

      - uses: subosito/flutter-action@v2.21.0
        with:
          channel: ${{matrix.channel}}
          flutter-version: "3.35.3"
          cache: false

      - name: Install Melos
        run: dart pub global activate melos

      - name: Bootstrap dependencies using Melos
        run: melos bootstrap

      - name: Copy .test.env to .dev.env and .prod.env
        run: |
          cp packages/env/test/.test.txt packages/env/.env.dev
          cp packages/env/test/.test.txt packages/env/.env.prod
        shell: bash

      - name: Run build_runner using Melos
        run: melos run build_runner

      - name: Run build_runner test using Melos
        run: dart run build_runner build

      - name: Format
        run: melos exec -- dart format lib test

      - name: Analyze
        run: melos exec -- flutter analyze lib test --no-fatal-infos

      - name: Run tests
        run: melos run test --no-select

      - name: Check for existing and non-empty coverage file
        id: test_coverage_file
        run: if [ -s "/coverage/lcov.info" ]; then echo "result=true" >> $GITHUB_OUTPUT ; else echo "result=false" >> $GITHUB_OUTPUT; fi

      - name: Very Good Coverage
        if: steps.test_coverage_file.outputs.result == 'true'
        uses: VeryGoodOpenSource/very_good_coverage@v3
        with:
          exclude: "**/*.g.dart **/*.gen.dart **/l10n/*.dart **/l10n/**/*.dart **/main/bootstrap.dart"
          path: "/coverage/lcov.info"
